{"version":3,"sources":["components/GraphicCard.js","App.js","reportWebVitals.js","index.js"],"names":["GraphicCard","name","status","image","link","className","target","href","src","App","useState","data","setData","intervalRef","useRef","timer","setTimer","useEffect","fetchData","a","axios","get","result","console","log","setInterval","id","oldTimer","current","clearInterval","map","e","gc","uuidv4","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAEe,SAASA,EAAT,GAAqD,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,KACzD,OACE,mBAAGC,UAAU,SAASC,OAAO,SAASC,KAAMH,EAA5C,SACE,sBAAKC,UAAU,OAAf,UACE,6BAAKJ,IACL,mBAAGI,UAAsB,YAAXH,EAAuB,WAAa,aAAlD,SACGA,IAEH,qBAAKG,UAAU,QAAQG,IAAKL,S,YC+CrBM,MAnDf,WAAgB,IAAD,EACWC,mBAAS,MADpB,mBACNC,EADM,KACAC,EADA,KAEPC,EAAcC,mBAFP,EAGaJ,mBAAS,IAHtB,mBAGNK,EAHM,KAGCC,EAHD,KA6Bb,OAxBAC,qBAAU,WACR,IAAMC,EAAS,uCAAG,4BAAAC,EAAA,sEACKC,IAAMC,IAAI,SADf,OACVC,EADU,OAEhBC,QAAQC,IAAIF,EAAOX,MACnBC,EAAQU,EAAOX,MAHC,2CAAH,qDAKfO,IACAO,aAAY,WACVP,IACAF,EAAS,MACR,KACH,IAAMU,EAAKD,aAAY,WAErBT,GAAS,SAACW,GAAD,OAAcA,EAAW,OACjC,KAIH,OADAd,EAAYe,QAAUF,EACf,WAELG,cAAchB,EAAYe,YAE3B,IAGD,sBAAKvB,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,iCACA,qBAAIA,UAAU,cAAd,8BACmB,sBAAMA,UAAU,QAAhB,SAAyBU,IAD5C,QAGA,qBAAKV,UAAU,YAAf,SACGM,GACCA,EAAKmB,KAAI,SAACC,GAAD,OACP,cAAC/B,EAAD,CAEEC,KAAM8B,EAAEC,GACR9B,OAAQ6B,EAAE7B,OACVC,MAAO4B,EAAE5B,MACTC,KAAM2B,EAAE3B,MAJH6B,wBCjCJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.00adfe61.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function GraphicCard({ name, status, image, link }) {\n  return (\n    <a className=\"gclink\" target=\"_blank\" href={link}>\n      <div className=\"card\">\n        <h3>{name}</h3>\n        <p className={status !== \"Rupture\" ? \"en-stock\" : \"en-rupture\"}>\n          {status}\n        </p>\n        <img className=\"image\" src={image} />\n      </div>\n    </a>\n  );\n}\n","import { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport GraphicCard from \"./components/GraphicCard\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nfunction App() {\n  const [data, setData] = useState(null);\n  const intervalRef = useRef();\n  const [timer, setTimer] = useState(30);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios.get(\"/data\");\n      console.log(result.data);\n      setData(result.data);\n    };\n    fetchData();\n    setInterval(() => {\n      fetchData();\n      setTimer(30);\n    }, 30000);\n    const id = setInterval(() => {\n      // On décrémente le minuteur géré par le state\n      setTimer((oldTimer) => oldTimer - 1);\n    }, 1000);\n\n    // Mise à jour de la référence\n    intervalRef.current = id;\n    return () => {\n      // Arrêt du ‘timer’ en cas de suppression ou réaffichage du composant\n      clearInterval(intervalRef.current);\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">LDLC 3080 G.C stock</h1>\n      <h2 className=\"title-timer\">\n        Next refresh in: <span className=\"timer\">{timer}</span> s\n      </h2>\n      <div className=\"container\">\n        {data &&\n          data.map((e) => (\n            <GraphicCard\n              key={uuidv4()}\n              name={e.gc}\n              status={e.status}\n              image={e.image}\n              link={e.link}\n            />\n          ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}